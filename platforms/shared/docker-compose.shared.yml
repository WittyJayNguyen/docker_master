# Shared Services - Database, phpMyAdmin, Redis, etc.

services:
  # MySQL Database - Shared across all platforms
  mysql:
    image: mysql:8.0
    container_name: mysql_server
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword123
      MYSQL_DATABASE: main_db
      MYSQL_USER: shared_user
      MYSQL_PASSWORD: shared_pass
    volumes:
      - ../../data/mysql:/var/lib/mysql
      - ../../docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

  # PostgreSQL Database - Alternative database
  postgres:
    image: postgres:15
    container_name: postgres_server
    restart: unless-stopped
    environment:
      POSTGRES_DB: main_db
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_pass
    volumes:
      - ../../data/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  # phpMyAdmin - MySQL Management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: rootpassword123
      MYSQL_ROOT_PASSWORD: rootpassword123
    ports:
      - "8080:80"
    networks:
      - app-network

  # pgAdmin - PostgreSQL Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8081:80"
    networks:
      - app-network

  # Redis - Caching and Session Storage
  redis:
    image: redis:7-alpine
    container_name: redis_server
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ../../data/redis:/data
    networks:
      - app-network

  # Mailhog - Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    name: docker_master_network
