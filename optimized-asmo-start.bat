@echo off
REM Optimized ASMO Food Service - Single Platform Start
REM T·ªëi ∆∞u h√≥a ch·ªâ cho d·ª± √°n ASMO Food Service

echo.
echo ========================================
echo   ASMO FOOD SERVICE - OPTIMIZED START
echo ========================================
echo.

echo üçï STARTING ASMO FOOD SERVICE PLATFORM
echo ================================================================

echo ‚ÑπÔ∏è  Optimized for single platform:
echo   ‚Ä¢ Only ASMO Food Service platform
echo   ‚Ä¢ Minimal resource usage
echo   ‚Ä¢ Fast startup time
echo   ‚Ä¢ Clean environment

echo.
echo üîç Step 1: Check Docker Desktop
echo ----------------------------------------------------------------

echo Checking Docker Desktop status...
docker ps >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker Desktop is not running!
    echo.
    echo üí° Please start Docker Desktop first and try again.
    echo.
    pause
    exit /b 1
)

echo ‚úÖ Docker Desktop is running

echo.
echo üóÑÔ∏è Step 2: Start core services
echo ----------------------------------------------------------------

echo Starting optimized core services...
docker-compose -f docker-compose.low-ram.yml up -d

echo ‚è≥ Waiting for core services...
timeout /t 8 /nobreak >nul

echo.
echo üçï Step 3: Start ASMO Food Service
echo ----------------------------------------------------------------

echo Starting ASMO Food Service platform...
cd platforms\asmo-foodservice
docker-compose -f docker-compose.asmo-foodservice.yml up -d
cd ..\..

echo ‚è≥ Waiting for platform to start...
timeout /t 10 /nobreak >nul

echo.
echo üîÑ Step 4: Fast system check
echo ----------------------------------------------------------------

echo Testing platform connectivity...
powershell -Command "try { Invoke-WebRequest -Uri 'http://localhost:8090' -TimeoutSec 5 -UseBasicParsing | Out-Null; Write-Host '‚úÖ Platform ready: http://localhost:8090' -ForegroundColor Green } catch { Write-Host '‚ö†Ô∏è  Platform starting...' -ForegroundColor Yellow }" 2>nul

echo.
echo üéâ ASMO FOOD SERVICE READY!
echo ================================================================

echo üìä PLATFORM STATUS:
echo ----------------------------------------------------------------
docker ps --filter "name=asmo-foodservice" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

echo.
echo üåê ACCESS URLS:
echo ----------------------------------------------------------------
echo   ‚Ä¢ Direct Access:    http://localhost:8090
echo   ‚Ä¢ Domain Access:    http://asmo-foodservice.io
echo   ‚Ä¢ Your Project:     http://localhost:8090/[your-files]

echo.
echo üóÑÔ∏è DATABASE INFO:
echo ----------------------------------------------------------------
echo   ‚Ä¢ MySQL:            localhost:3306
echo   ‚Ä¢ Database:         asmo_foodservice_db
echo   ‚Ä¢ Username:         mysql_user
echo   ‚Ä¢ Password:         mysql_pass

echo.
echo üêõ DEBUG INFO:
echo ----------------------------------------------------------------
echo   ‚Ä¢ Xdebug Port:      9090
echo   ‚Ä¢ PHP Version:      7.4
echo   ‚Ä¢ Platform:         WordPress/PHP

echo.
echo üí° QUICK TIPS:
echo ================================================================
echo   ‚Ä¢ Add your project files to: projects\asmo-foodservice\wordpress\
echo   ‚Ä¢ Files appear instantly (no restart needed)
echo   ‚Ä¢ Access via: http://localhost:8090/your-file.php
echo   ‚Ä¢ For domain access, run: scripts\setup-domains.bat (as Admin)

echo.
echo üåü OPTIMIZED ASMO PLATFORM READY!
echo    Single platform, maximum performance!

echo.
echo üåê Opening platform...
start http://localhost:8090

pause
